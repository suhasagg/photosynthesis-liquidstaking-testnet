// DONTCOVER
// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: archway/photosynthesis/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Response type for MsgExecuteCronTasks.
type MsgExecuteCronTasks struct {
	// Address of the sender.
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty" yaml:"creator"`
}

func (m *MsgExecuteCronTasks) Reset()         { *m = MsgExecuteCronTasks{} }
func (m *MsgExecuteCronTasks) String() string { return proto.CompactTextString(m) }
func (*MsgExecuteCronTasks) ProtoMessage()    {}
func (*MsgExecuteCronTasks) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d04daa1c8e6d6f0, []int{0}
}
func (m *MsgExecuteCronTasks) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgExecuteCronTasks) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgExecuteCronTasks.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgExecuteCronTasks) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgExecuteCronTasks.Merge(m, src)
}
func (m *MsgExecuteCronTasks) XXX_Size() int {
	return m.Size()
}
func (m *MsgExecuteCronTasks) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgExecuteCronTasks.DiscardUnknown(m)
}

var xxx_messageInfo_MsgExecuteCronTasks proto.InternalMessageInfo

func (m *MsgExecuteCronTasks) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

// Response type for MsgExecuteCronTasks.
type MsgExecuteCronTasksResponse struct {
}

func (m *MsgExecuteCronTasksResponse) Reset()         { *m = MsgExecuteCronTasksResponse{} }
func (m *MsgExecuteCronTasksResponse) String() string { return proto.CompactTextString(m) }
func (*MsgExecuteCronTasksResponse) ProtoMessage()    {}
func (*MsgExecuteCronTasksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d04daa1c8e6d6f0, []int{1}
}
func (m *MsgExecuteCronTasksResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgExecuteCronTasksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgExecuteCronTasksResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgExecuteCronTasksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgExecuteCronTasksResponse.Merge(m, src)
}
func (m *MsgExecuteCronTasksResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgExecuteCronTasksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgExecuteCronTasksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgExecuteCronTasksResponse proto.InternalMessageInfo

// MsgResetTotalLiquidStake defines the message for resetting total liquid
// stake.
type MsgResetTotalLiquidStake struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty" yaml:"creator"`
}

func (m *MsgResetTotalLiquidStake) Reset()         { *m = MsgResetTotalLiquidStake{} }
func (m *MsgResetTotalLiquidStake) String() string { return proto.CompactTextString(m) }
func (*MsgResetTotalLiquidStake) ProtoMessage()    {}
func (*MsgResetTotalLiquidStake) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d04daa1c8e6d6f0, []int{2}
}
func (m *MsgResetTotalLiquidStake) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgResetTotalLiquidStake) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgResetTotalLiquidStake.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgResetTotalLiquidStake) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgResetTotalLiquidStake.Merge(m, src)
}
func (m *MsgResetTotalLiquidStake) XXX_Size() int {
	return m.Size()
}
func (m *MsgResetTotalLiquidStake) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgResetTotalLiquidStake.DiscardUnknown(m)
}

var xxx_messageInfo_MsgResetTotalLiquidStake proto.InternalMessageInfo

func (m *MsgResetTotalLiquidStake) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

// Response type for MsgResetTotalLiquidStake.
type MsgResetTotalLiquidStakeResponse struct {
}

func (m *MsgResetTotalLiquidStakeResponse) Reset()         { *m = MsgResetTotalLiquidStakeResponse{} }
func (m *MsgResetTotalLiquidStakeResponse) String() string { return proto.CompactTextString(m) }
func (*MsgResetTotalLiquidStakeResponse) ProtoMessage()    {}
func (*MsgResetTotalLiquidStakeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d04daa1c8e6d6f0, []int{3}
}
func (m *MsgResetTotalLiquidStakeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgResetTotalLiquidStakeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgResetTotalLiquidStakeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgResetTotalLiquidStakeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgResetTotalLiquidStakeResponse.Merge(m, src)
}
func (m *MsgResetTotalLiquidStakeResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgResetTotalLiquidStakeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgResetTotalLiquidStakeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgResetTotalLiquidStakeResponse proto.InternalMessageInfo

// MsgResetAllCompletedDepositRecords defines the message for resetting all
// completed deposit records.
type MsgResetAllCompletedDepositRecords struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty" yaml:"creator"`
}

func (m *MsgResetAllCompletedDepositRecords) Reset()         { *m = MsgResetAllCompletedDepositRecords{} }
func (m *MsgResetAllCompletedDepositRecords) String() string { return proto.CompactTextString(m) }
func (*MsgResetAllCompletedDepositRecords) ProtoMessage()    {}
func (*MsgResetAllCompletedDepositRecords) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d04daa1c8e6d6f0, []int{4}
}
func (m *MsgResetAllCompletedDepositRecords) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgResetAllCompletedDepositRecords) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgResetAllCompletedDepositRecords.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgResetAllCompletedDepositRecords) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgResetAllCompletedDepositRecords.Merge(m, src)
}
func (m *MsgResetAllCompletedDepositRecords) XXX_Size() int {
	return m.Size()
}
func (m *MsgResetAllCompletedDepositRecords) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgResetAllCompletedDepositRecords.DiscardUnknown(m)
}

var xxx_messageInfo_MsgResetAllCompletedDepositRecords proto.InternalMessageInfo

func (m *MsgResetAllCompletedDepositRecords) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

// Response type for MsgResetAllCompletedDepositRecords.
type MsgResetAllCompletedDepositRecordsResponse struct {
}

func (m *MsgResetAllCompletedDepositRecordsResponse) Reset() {
	*m = MsgResetAllCompletedDepositRecordsResponse{}
}
func (m *MsgResetAllCompletedDepositRecordsResponse) String() string {
	return proto.CompactTextString(m)
}
func (*MsgResetAllCompletedDepositRecordsResponse) ProtoMessage() {}
func (*MsgResetAllCompletedDepositRecordsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d04daa1c8e6d6f0, []int{5}
}
func (m *MsgResetAllCompletedDepositRecordsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgResetAllCompletedDepositRecordsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgResetAllCompletedDepositRecordsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgResetAllCompletedDepositRecordsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgResetAllCompletedDepositRecordsResponse.Merge(m, src)
}
func (m *MsgResetAllCompletedDepositRecordsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgResetAllCompletedDepositRecordsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgResetAllCompletedDepositRecordsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgResetAllCompletedDepositRecordsResponse proto.InternalMessageInfo

// MsgSetRedeemTokenData defines a message for setting redeem token data.
type MsgSetRedeemTokenData struct {
	Creator         string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ContractAddress string `protobuf:"bytes,2,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	Amount          string `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (m *MsgSetRedeemTokenData) Reset()         { *m = MsgSetRedeemTokenData{} }
func (m *MsgSetRedeemTokenData) String() string { return proto.CompactTextString(m) }
func (*MsgSetRedeemTokenData) ProtoMessage()    {}
func (*MsgSetRedeemTokenData) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d04daa1c8e6d6f0, []int{6}
}
func (m *MsgSetRedeemTokenData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetRedeemTokenData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetRedeemTokenData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetRedeemTokenData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetRedeemTokenData.Merge(m, src)
}
func (m *MsgSetRedeemTokenData) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetRedeemTokenData) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetRedeemTokenData.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetRedeemTokenData proto.InternalMessageInfo

func (m *MsgSetRedeemTokenData) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetRedeemTokenData) GetContractAddress() string {
	if m != nil {
		return m.ContractAddress
	}
	return ""
}

func (m *MsgSetRedeemTokenData) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

// MsgSetRedeemTokenDataResponse defines the response after setting redeem token
// data.
type MsgSetRedeemTokenDataResponse struct {
}

func (m *MsgSetRedeemTokenDataResponse) Reset()         { *m = MsgSetRedeemTokenDataResponse{} }
func (m *MsgSetRedeemTokenDataResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetRedeemTokenDataResponse) ProtoMessage()    {}
func (*MsgSetRedeemTokenDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d04daa1c8e6d6f0, []int{7}
}
func (m *MsgSetRedeemTokenDataResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetRedeemTokenDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetRedeemTokenDataResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetRedeemTokenDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetRedeemTokenDataResponse.Merge(m, src)
}
func (m *MsgSetRedeemTokenDataResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetRedeemTokenDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetRedeemTokenDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetRedeemTokenDataResponse proto.InternalMessageInfo

// MsgClearRedeemTokenData defines a message for clearing all redeem token data.
type MsgClearRedeemTokenData struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgClearRedeemTokenData) Reset()         { *m = MsgClearRedeemTokenData{} }
func (m *MsgClearRedeemTokenData) String() string { return proto.CompactTextString(m) }
func (*MsgClearRedeemTokenData) ProtoMessage()    {}
func (*MsgClearRedeemTokenData) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d04daa1c8e6d6f0, []int{8}
}
func (m *MsgClearRedeemTokenData) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgClearRedeemTokenData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgClearRedeemTokenData.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgClearRedeemTokenData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgClearRedeemTokenData.Merge(m, src)
}
func (m *MsgClearRedeemTokenData) XXX_Size() int {
	return m.Size()
}
func (m *MsgClearRedeemTokenData) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgClearRedeemTokenData.DiscardUnknown(m)
}

var xxx_messageInfo_MsgClearRedeemTokenData proto.InternalMessageInfo

func (m *MsgClearRedeemTokenData) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

// MsgClearRedeemTokenDataResponse defines the response after clearing redeem
// token data.
type MsgClearRedeemTokenDataResponse struct {
}

func (m *MsgClearRedeemTokenDataResponse) Reset()         { *m = MsgClearRedeemTokenDataResponse{} }
func (m *MsgClearRedeemTokenDataResponse) String() string { return proto.CompactTextString(m) }
func (*MsgClearRedeemTokenDataResponse) ProtoMessage()    {}
func (*MsgClearRedeemTokenDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d04daa1c8e6d6f0, []int{9}
}
func (m *MsgClearRedeemTokenDataResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgClearRedeemTokenDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgClearRedeemTokenDataResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgClearRedeemTokenDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgClearRedeemTokenDataResponse.Merge(m, src)
}
func (m *MsgClearRedeemTokenDataResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgClearRedeemTokenDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgClearRedeemTokenDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgClearRedeemTokenDataResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgExecuteCronTasks)(nil), "archway.photosynthesis.v1.MsgExecuteCronTasks")
	proto.RegisterType((*MsgExecuteCronTasksResponse)(nil), "archway.photosynthesis.v1.MsgExecuteCronTasksResponse")
	proto.RegisterType((*MsgResetTotalLiquidStake)(nil), "archway.photosynthesis.v1.MsgResetTotalLiquidStake")
	proto.RegisterType((*MsgResetTotalLiquidStakeResponse)(nil), "archway.photosynthesis.v1.MsgResetTotalLiquidStakeResponse")
	proto.RegisterType((*MsgResetAllCompletedDepositRecords)(nil), "archway.photosynthesis.v1.MsgResetAllCompletedDepositRecords")
	proto.RegisterType((*MsgResetAllCompletedDepositRecordsResponse)(nil), "archway.photosynthesis.v1.MsgResetAllCompletedDepositRecordsResponse")
	proto.RegisterType((*MsgSetRedeemTokenData)(nil), "archway.photosynthesis.v1.MsgSetRedeemTokenData")
	proto.RegisterType((*MsgSetRedeemTokenDataResponse)(nil), "archway.photosynthesis.v1.MsgSetRedeemTokenDataResponse")
	proto.RegisterType((*MsgClearRedeemTokenData)(nil), "archway.photosynthesis.v1.MsgClearRedeemTokenData")
	proto.RegisterType((*MsgClearRedeemTokenDataResponse)(nil), "archway.photosynthesis.v1.MsgClearRedeemTokenDataResponse")
}

func init() { proto.RegisterFile("archway/photosynthesis/tx.proto", fileDescriptor_2d04daa1c8e6d6f0) }

var fileDescriptor_2d04daa1c8e6d6f0 = []byte{
	// 518 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x94, 0xbf, 0x6e, 0xd3, 0x50,
	0x18, 0xc5, 0x63, 0x2a, 0x8a, 0xf8, 0x06, 0xa8, 0x4c, 0x0b, 0xc1, 0xa8, 0x76, 0xf1, 0xc4, 0x9f,
	0x62, 0x43, 0x23, 0x21, 0x28, 0x62, 0x68, 0xd3, 0x4a, 0x0c, 0x64, 0x71, 0x32, 0xb1, 0xa0, 0x1b,
	0xfb, 0xc3, 0xb1, 0x62, 0xfb, 0x33, 0xf7, 0x7e, 0xa1, 0x09, 0x13, 0x13, 0x12, 0x1b, 0x6f, 0xc1,
	0x83, 0xb0, 0x30, 0x76, 0x64, 0x42, 0x28, 0x79, 0x03, 0x9e, 0x00, 0xe1, 0xc6, 0x96, 0x68, 0x9c,
	0xb4, 0x81, 0x2d, 0xf7, 0xe6, 0xfc, 0xce, 0x39, 0x96, 0x8e, 0x2e, 0x58, 0x42, 0xfa, 0xbd, 0x23,
	0x31, 0x72, 0xb3, 0x1e, 0x31, 0xa9, 0x51, 0xca, 0x3d, 0x54, 0x91, 0x72, 0x79, 0xe8, 0x64, 0x92,
	0x98, 0xf4, 0x9b, 0x53, 0x81, 0xf3, 0xb7, 0xc0, 0x79, 0xf7, 0xc8, 0x58, 0x0f, 0x29, 0xa4, 0x5c,
	0xe5, 0xfe, 0xf9, 0x75, 0x02, 0x18, 0x56, 0x48, 0x14, 0xc6, 0xe8, 0xe6, 0xa7, 0xee, 0xe0, 0x8d,
	0xcb, 0x51, 0x82, 0x8a, 0x45, 0x92, 0x4d, 0x05, 0xf7, 0xe7, 0x44, 0x9e, 0x0a, 0xc8, 0xc5, 0x76,
	0x13, 0xae, 0xb5, 0x54, 0x78, 0x38, 0x44, 0x7f, 0xc0, 0xd8, 0x94, 0x94, 0x76, 0x84, 0xea, 0x2b,
	0x7d, 0x1b, 0x2e, 0xf9, 0x12, 0x05, 0x93, 0xac, 0x6b, 0x5b, 0xda, 0x9d, 0xcb, 0xfb, 0xfa, 0xaf,
	0x1f, 0xd6, 0x95, 0x91, 0x48, 0xe2, 0x5d, 0x7b, 0xfa, 0x87, 0xed, 0x15, 0x12, 0x7b, 0x13, 0x6e,
	0x55, 0x98, 0x78, 0xa8, 0x32, 0x4a, 0x15, 0xda, 0x2f, 0xa0, 0xde, 0x52, 0xa1, 0x87, 0x0a, 0xb9,
	0x43, 0x2c, 0xe2, 0x97, 0xd1, 0xdb, 0x41, 0x14, 0xb4, 0x59, 0xf4, 0x71, 0xc9, 0x20, 0x1b, 0xb6,
	0xe6, 0x39, 0x95, 0x69, 0x1e, 0xd8, 0x85, 0x66, 0x2f, 0x8e, 0x9b, 0x94, 0x64, 0x31, 0x32, 0x06,
	0x07, 0x98, 0x91, 0x8a, 0xd8, 0x43, 0x9f, 0x64, 0xb0, 0xec, 0x07, 0x6e, 0xc3, 0xbd, 0xb3, 0x3d,
	0xcb, 0x06, 0x0c, 0x1b, 0x2d, 0x15, 0xb6, 0x91, 0x3d, 0x0c, 0x10, 0x93, 0x0e, 0xf5, 0x31, 0x3d,
	0x10, 0x2c, 0xf4, 0xfa, 0xa9, 0xd0, 0x32, 0x40, 0xbf, 0x0b, 0x6b, 0x3e, 0xa5, 0x2c, 0x85, 0xcf,
	0xaf, 0x45, 0x10, 0x48, 0x54, 0xaa, 0x7e, 0x21, 0x97, 0x5c, 0x2d, 0xee, 0xf7, 0x4e, 0xae, 0xf5,
	0xeb, 0xb0, 0x2a, 0x12, 0x1a, 0xa4, 0x5c, 0x5f, 0xc9, 0x05, 0xd3, 0x93, 0x6d, 0xc1, 0x66, 0x65,
	0x6a, 0x59, 0xab, 0x01, 0x37, 0x5a, 0x2a, 0x6c, 0xc6, 0x28, 0xe4, 0xb9, 0x8b, 0xd9, 0xb7, 0xc1,
	0x9a, 0x03, 0x15, 0xbe, 0x3b, 0x5f, 0x2f, 0xc2, 0x4a, 0x4b, 0x85, 0xfa, 0x7b, 0x58, 0x9b, 0xd9,
	0x91, 0xe3, 0xcc, 0x9d, 0xb7, 0x53, 0x31, 0x19, 0xe3, 0xf1, 0x72, 0xfa, 0xa2, 0x83, 0xfe, 0x49,
	0x83, 0x8d, 0xea, 0x81, 0x35, 0x16, 0x3b, 0x56, 0x42, 0xc6, 0xb3, 0x7f, 0x80, 0xca, 0x2e, 0x5f,
	0x34, 0xb0, 0xce, 0x9a, 0xdf, 0xf3, 0x73, 0x04, 0xcc, 0xc7, 0x8d, 0xc3, 0xff, 0xc2, 0xcb, 0xa6,
	0x1f, 0x34, 0xd0, 0x2b, 0x66, 0xfa, 0x70, 0xb1, 0xfb, 0x2c, 0x61, 0x3c, 0x59, 0x96, 0x28, 0x2b,
	0x7c, 0xd4, 0x60, 0xbd, 0x72, 0x92, 0x3b, 0x8b, 0x2d, 0xab, 0x18, 0x63, 0x77, 0x79, 0xa6, 0x28,
	0xb2, 0xdf, 0xfe, 0x36, 0x36, 0xb5, 0xe3, 0xb1, 0xa9, 0xfd, 0x1c, 0x9b, 0xda, 0xe7, 0x89, 0x59,
	0x3b, 0x9e, 0x98, 0xb5, 0xef, 0x13, 0xb3, 0xf6, 0xea, 0x69, 0x18, 0x71, 0x6f, 0xd0, 0x75, 0x7c,
	0x4a, 0xdc, 0xa9, 0xff, 0x83, 0x14, 0xf9, 0x88, 0x64, 0xbf, 0x38, 0xbb, 0xc3, 0x99, 0xf7, 0x7d,
	0x94, 0xa1, 0xea, 0xae, 0xe6, 0x8f, 0x6c, 0xe3, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0xd3, 0x76,
	0x2d, 0x32, 0x06, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	ExecuteCronTasks(ctx context.Context, in *MsgExecuteCronTasks, opts ...grpc.CallOption) (*MsgExecuteCronTasksResponse, error)
	ResetTotalLiquidStake(ctx context.Context, in *MsgResetTotalLiquidStake, opts ...grpc.CallOption) (*MsgResetTotalLiquidStakeResponse, error)
	ResetAllCompletedDepositRecords(ctx context.Context, in *MsgResetAllCompletedDepositRecords, opts ...grpc.CallOption) (*MsgResetAllCompletedDepositRecordsResponse, error)
	// Set redeem token data for a contract.
	SetRedeemTokenData(ctx context.Context, in *MsgSetRedeemTokenData, opts ...grpc.CallOption) (*MsgSetRedeemTokenDataResponse, error)
	// Clear all redeem token data.
	ClearRedeemTokenData(ctx context.Context, in *MsgClearRedeemTokenData, opts ...grpc.CallOption) (*MsgClearRedeemTokenDataResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) ExecuteCronTasks(ctx context.Context, in *MsgExecuteCronTasks, opts ...grpc.CallOption) (*MsgExecuteCronTasksResponse, error) {
	out := new(MsgExecuteCronTasksResponse)
	err := c.cc.Invoke(ctx, "/archway.photosynthesis.v1.Msg/ExecuteCronTasks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ResetTotalLiquidStake(ctx context.Context, in *MsgResetTotalLiquidStake, opts ...grpc.CallOption) (*MsgResetTotalLiquidStakeResponse, error) {
	out := new(MsgResetTotalLiquidStakeResponse)
	err := c.cc.Invoke(ctx, "/archway.photosynthesis.v1.Msg/ResetTotalLiquidStake", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ResetAllCompletedDepositRecords(ctx context.Context, in *MsgResetAllCompletedDepositRecords, opts ...grpc.CallOption) (*MsgResetAllCompletedDepositRecordsResponse, error) {
	out := new(MsgResetAllCompletedDepositRecordsResponse)
	err := c.cc.Invoke(ctx, "/archway.photosynthesis.v1.Msg/ResetAllCompletedDepositRecords", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetRedeemTokenData(ctx context.Context, in *MsgSetRedeemTokenData, opts ...grpc.CallOption) (*MsgSetRedeemTokenDataResponse, error) {
	out := new(MsgSetRedeemTokenDataResponse)
	err := c.cc.Invoke(ctx, "/archway.photosynthesis.v1.Msg/SetRedeemTokenData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ClearRedeemTokenData(ctx context.Context, in *MsgClearRedeemTokenData, opts ...grpc.CallOption) (*MsgClearRedeemTokenDataResponse, error) {
	out := new(MsgClearRedeemTokenDataResponse)
	err := c.cc.Invoke(ctx, "/archway.photosynthesis.v1.Msg/ClearRedeemTokenData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	ExecuteCronTasks(context.Context, *MsgExecuteCronTasks) (*MsgExecuteCronTasksResponse, error)
	ResetTotalLiquidStake(context.Context, *MsgResetTotalLiquidStake) (*MsgResetTotalLiquidStakeResponse, error)
	ResetAllCompletedDepositRecords(context.Context, *MsgResetAllCompletedDepositRecords) (*MsgResetAllCompletedDepositRecordsResponse, error)
	// Set redeem token data for a contract.
	SetRedeemTokenData(context.Context, *MsgSetRedeemTokenData) (*MsgSetRedeemTokenDataResponse, error)
	// Clear all redeem token data.
	ClearRedeemTokenData(context.Context, *MsgClearRedeemTokenData) (*MsgClearRedeemTokenDataResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) ExecuteCronTasks(ctx context.Context, req *MsgExecuteCronTasks) (*MsgExecuteCronTasksResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecuteCronTasks not implemented")
}
func (*UnimplementedMsgServer) ResetTotalLiquidStake(ctx context.Context, req *MsgResetTotalLiquidStake) (*MsgResetTotalLiquidStakeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResetTotalLiquidStake not implemented")
}
func (*UnimplementedMsgServer) ResetAllCompletedDepositRecords(ctx context.Context, req *MsgResetAllCompletedDepositRecords) (*MsgResetAllCompletedDepositRecordsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResetAllCompletedDepositRecords not implemented")
}
func (*UnimplementedMsgServer) SetRedeemTokenData(ctx context.Context, req *MsgSetRedeemTokenData) (*MsgSetRedeemTokenDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetRedeemTokenData not implemented")
}
func (*UnimplementedMsgServer) ClearRedeemTokenData(ctx context.Context, req *MsgClearRedeemTokenData) (*MsgClearRedeemTokenDataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClearRedeemTokenData not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_ExecuteCronTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgExecuteCronTasks)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ExecuteCronTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/archway.photosynthesis.v1.Msg/ExecuteCronTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ExecuteCronTasks(ctx, req.(*MsgExecuteCronTasks))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ResetTotalLiquidStake_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgResetTotalLiquidStake)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ResetTotalLiquidStake(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/archway.photosynthesis.v1.Msg/ResetTotalLiquidStake",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ResetTotalLiquidStake(ctx, req.(*MsgResetTotalLiquidStake))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ResetAllCompletedDepositRecords_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgResetAllCompletedDepositRecords)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ResetAllCompletedDepositRecords(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/archway.photosynthesis.v1.Msg/ResetAllCompletedDepositRecords",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ResetAllCompletedDepositRecords(ctx, req.(*MsgResetAllCompletedDepositRecords))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetRedeemTokenData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetRedeemTokenData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetRedeemTokenData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/archway.photosynthesis.v1.Msg/SetRedeemTokenData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetRedeemTokenData(ctx, req.(*MsgSetRedeemTokenData))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ClearRedeemTokenData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgClearRedeemTokenData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ClearRedeemTokenData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/archway.photosynthesis.v1.Msg/ClearRedeemTokenData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ClearRedeemTokenData(ctx, req.(*MsgClearRedeemTokenData))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "archway.photosynthesis.v1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ExecuteCronTasks",
			Handler:    _Msg_ExecuteCronTasks_Handler,
		},
		{
			MethodName: "ResetTotalLiquidStake",
			Handler:    _Msg_ResetTotalLiquidStake_Handler,
		},
		{
			MethodName: "ResetAllCompletedDepositRecords",
			Handler:    _Msg_ResetAllCompletedDepositRecords_Handler,
		},
		{
			MethodName: "SetRedeemTokenData",
			Handler:    _Msg_SetRedeemTokenData_Handler,
		},
		{
			MethodName: "ClearRedeemTokenData",
			Handler:    _Msg_ClearRedeemTokenData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "archway/photosynthesis/tx.proto",
}

func (m *MsgExecuteCronTasks) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgExecuteCronTasks) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgExecuteCronTasks) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgExecuteCronTasksResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgExecuteCronTasksResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgExecuteCronTasksResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgResetTotalLiquidStake) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgResetTotalLiquidStake) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgResetTotalLiquidStake) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgResetTotalLiquidStakeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgResetTotalLiquidStakeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgResetTotalLiquidStakeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgResetAllCompletedDepositRecords) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgResetAllCompletedDepositRecords) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgResetAllCompletedDepositRecords) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgResetAllCompletedDepositRecordsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgResetAllCompletedDepositRecordsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgResetAllCompletedDepositRecordsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetRedeemTokenData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetRedeemTokenData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetRedeemTokenData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Amount) > 0 {
		i -= len(m.Amount)
		copy(dAtA[i:], m.Amount)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Amount)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ContractAddress) > 0 {
		i -= len(m.ContractAddress)
		copy(dAtA[i:], m.ContractAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ContractAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetRedeemTokenDataResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetRedeemTokenDataResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetRedeemTokenDataResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgClearRedeemTokenData) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgClearRedeemTokenData) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgClearRedeemTokenData) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgClearRedeemTokenDataResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgClearRedeemTokenDataResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgClearRedeemTokenDataResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgExecuteCronTasks) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgExecuteCronTasksResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgResetTotalLiquidStake) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgResetTotalLiquidStakeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgResetAllCompletedDepositRecords) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgResetAllCompletedDepositRecordsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetRedeemTokenData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ContractAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Amount)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSetRedeemTokenDataResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgClearRedeemTokenData) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgClearRedeemTokenDataResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgExecuteCronTasks) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgExecuteCronTasks: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgExecuteCronTasks: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgExecuteCronTasksResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgExecuteCronTasksResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgExecuteCronTasksResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgResetTotalLiquidStake) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgResetTotalLiquidStake: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgResetTotalLiquidStake: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgResetTotalLiquidStakeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgResetTotalLiquidStakeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgResetTotalLiquidStakeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgResetAllCompletedDepositRecords) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgResetAllCompletedDepositRecords: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgResetAllCompletedDepositRecords: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgResetAllCompletedDepositRecordsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgResetAllCompletedDepositRecordsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgResetAllCompletedDepositRecordsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetRedeemTokenData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetRedeemTokenData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetRedeemTokenData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ContractAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ContractAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Amount = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetRedeemTokenDataResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetRedeemTokenDataResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetRedeemTokenDataResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgClearRedeemTokenData) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgClearRedeemTokenData: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgClearRedeemTokenData: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgClearRedeemTokenDataResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgClearRedeemTokenDataResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgClearRedeemTokenDataResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
